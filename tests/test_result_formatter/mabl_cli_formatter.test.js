const MablCliFormatter = require("../../src/test_result_formatter/mabl_cli_formatter");

describe("In case of invalid format", () => {
  test("alert for statuses that are out of scope", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 1,
          passed: 0,
          failed: 1,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "I7AxrJ8cj6cvybnbhPvNxg-a",
                completed_time: 1727919356192,
                journey_execution_id: "application_id",
                href: "URLr",
                journey_id: "journey_id",
                initial_url: "initial_url",
                test_id: "test_id",
                app_href: "result_url",
                status: "running",
              },
            ],
            start_time: 1727930167078,
            journeys: [
              {
                name: "sample test",
                id: "journey_id",
                href: "url",
                app_href: "url",
              },
            ],
            stop_time: 1727930254084,
            success: false,
            plan: {
              name: "sample plan",
              id: "vL6lwEZsDCcFC5VYvhM0Jg-p",
              href: "URL",
              app_href: "url",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "gZYkrnwi15DQJTQElCQGZg-pr",
              href: "url",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 1,
          passed: 0,
          failed: 1,
          terminated: 0,
          skipped: 0,
        },
        event_status: {
          succeeded_by_plan: {
            "vL6lwEZsDCcFC5VYvhM0Jg-p": false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };
    const testResultFormatter = new MablCliFormatter();
    expect(() => testResultFormatter.format(jsonData)).toThrow(
      "running is a status that cannot be included in the automatic test stability report."
    );
  });
});

describe("Data Transformation Across Various Patterns", () => {
  test("Multiple Test Plans, Single Test Case, No Data-Driven, Single Browser, Multiple Execution Links", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 4,
          passed: 4,
          failed: 0,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "edge",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919308354,
                environment_id: "environment_id",
                started_time: 1727919182526,
                browser_type: "edge",
                application_id: "application_id",
                start_time: 1727919182526,
                completed_time: 1727919308354,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
            ],
            start_time: 1727919180322,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "https://api.mabl.com/test/journey/wCokgirMxSiLjFJET82B6g-j:4",
                app_href:
                  "https://app.mabl.com/workspaces/NLucE7eum23G8HSwcTTA7Q-w/train/tests/wCokgirMxSiLjFJET82B6g-j/test-runs/xhBCgmXravd3FHl0BIUCXQ-jr",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "https://api.mabl.com/test/journey/wCokgirMxSiLjFJET82B6g-j:4",
                app_href:
                  "https://app.mabl.com/workspaces/NLucE7eum23G8HSwcTTA7Q-w/train/tests/wCokgirMxSiLjFJET82B6g-j/test-runs/LPeJgqTF5ZOpET45AuXgjw-jr",
              },
            ],
            stop_time: 1727919370451,
            success: true,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "succeeded",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "succeeded",
            },
          },
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "edge",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919308354,
                environment_id: "environment_id",
                started_time: 1727919182526,
                browser_type: "edge",
                application_id: "application_id",
                start_time: 1727919182526,
                completed_time: 1727919308354,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
            ],
            start_time: 1727919180322,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "https://api.mabl.com/test/journey/wCokgirMxSiLjFJET82B6g-j:4",
                app_href:
                  "https://app.mabl.com/workspaces/NLucE7eum23G8HSwcTTA7Q-w/train/tests/wCokgirMxSiLjFJET82B6g-j/test-runs/xhBCgmXravd3FHl0BIUCXQ-jr",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "https://api.mabl.com/test/journey/wCokgirMxSiLjFJET82B6g-j:4",
                app_href:
                  "https://app.mabl.com/workspaces/NLucE7eum23G8HSwcTTA7Q-w/train/tests/wCokgirMxSiLjFJET82B6g-j/test-runs/LPeJgqTF5ZOpET45AuXgjw-jr",
              },
            ],
            stop_time: 1727919370451,
            success: true,
            plan: {
              name: "テストプランB",
              id: "test_plan_B",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "succeeded",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "succeeded",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 4,
          passed: 4,
          failed: 0,
          terminated: 0,
          skipped: 0,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: true,
            test_plan_B: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };

    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(4);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
      ],
    });
    expect(formattedData[1]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 125828,
          info_url: "result_info_URL",
        },
      ],
    });
    expect(formattedData[2]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
      ],
    });
    expect(formattedData[3]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 125828,
          info_url: "result_info_URL",
        },
      ],
    });
  });

  test("Single Test Plan, Single Test Case, Data-Driven, Multiple Browsers, Single Execution Link", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 2,
          passed: 1,
          failed: 1,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "firefox",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "firefox",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
            ],
            start_time: 1727919180101,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919356349,
            success: false,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 6,
          passed: 2,
          failed: 2,
          terminated: 0,
          skipped: 2,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };

    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(2);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
    expect(formattedData[1]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "firefox_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
  });

  test("Single Test Plan, Multiple Test Cases, No Data-Driven, Single Browser, Single Execution Link", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 4,
          passed: 1,
          failed: 1,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "chrome",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
            ],
            start_time: 1727919180322,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919370451,
            success: true,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 4,
          passed: 1,
          failed: 1,
          terminated: 1,
          skipped: 1,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: true,
            test_plan_B: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };

    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(1);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
  });

  test("Multiple Test Plans, Multiple Test Cases, No Data-Driven, Multiple Browsers, Multiple Execution Links", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 32,
          passed: 8,
          failed: 8,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "chrome",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "chrome",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "firefox",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "firefox",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
            ],
            start_time: 1727919180322,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919370451,
            success: true,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "chrome",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "chrome",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "firefox",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                started_time: 1727919311152,
                browser_type: "firefox",
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                success: true,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "result_info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_3",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "firefox",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_4",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "terminated",
              },
            ],
            start_time: 1727919180322,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース3",
                id: "test_case_3",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース4",
                id: "test_case_4",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919370451,
            success: true,
            plan: {
              name: "テストプランB",
              id: "test_plan_B",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 32,
          passed: 8,
          failed: 8,
          terminated: 8,
          skipped: 8,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: false,
            test_plan_B: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };

    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(8);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[1]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[2]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "firefox_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[3]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "firefox_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[4]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[5]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[6]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "firefox_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
    expect(formattedData[7]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "firefox_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "result_info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_3",
          auto_test_case_name: "テストケース3",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_4",
          auto_test_case_name: "テストケース4",
          result: "error",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
      ],
    });
  });

  test("Single Test Plan, Multiple Test Cases, Data-Driven, Single Browser, Multiple Execution Links", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 12,
          passed: 4,
          failed: 4,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_B",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
            ],
            start_time: 1727919180101,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919356349,
            success: false,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 12,
          passed: 4,
          failed: 4,
          terminated: 0,
          skipped: 4,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };

    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(2);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
    expect(formattedData[1]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_B",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
  });

  test("Multiple Test Plans, Multiple Test Cases, Data-Driven, Multiple Browsers, Single Execution Link", () => {
    const jsonData = {
      id: "deployment_id",
      href: "deploy_URL",
      execution_results: {
        plan_execution_metrics: {
          total: 12,
          passed: 4,
          failed: 4,
        },
        executions: [
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
            ],
            start_time: 1727919180101,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919356349,
            success: false,
            plan: {
              name: "テストプランA",
              id: "test_plan_A",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
          {
            journey_executions: [
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_1",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "chrome",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919356192,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern1",
                test_cases: [],
                application_id: "application_id",
                completed_time: 1727919356192,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "skipped",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919369563,
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern2",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919311152,
                completed_time: 1727919369563,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "completed",
              },
              {
                run_multiplier_index: 0,
                stop_time: 1727919354699,
                failure_summary: {
                  step_number: 5,
                  image_href: "image_URL",
                  flow_id: "flow_id",
                  flow_name: "",
                  step_id: "step_id",
                  step_id_in_test: "step_id_in_test",
                  error: "Assertion Failure",
                  assert_failure: {
                    reason: "Value did not contain expected.",
                    found: "合計",
                    expected: "24,000円",
                  },
                  image_artifact_url: "artufact_url",
                },
                environment_id: "environment_id",
                browser_type: "edge",
                scenario_name: "dataPattern3",
                test_cases: [],
                application_id: "application_id",
                start_time: 1727919252317,
                completed_time: 1727919356192,
                success: false,
                journey_execution_id: "journey_execution_id",
                href: "href_URL",
                journey_id: "test_case_2",
                initial_url: "initial_url_A",
                test_id: "test_id",
                app_href: "info_URL",
                status: "failed",
              },
            ],
            start_time: 1727919180101,
            journeys: [
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース1",
                id: "test_case_1",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
              {
                name: "テストケース2",
                id: "test_case_2",
                href: "test_case_URL",
                app_href: "test_case_result_URL",
              },
            ],
            stop_time: 1727919356349,
            success: false,
            plan: {
              name: "テストプランB",
              id: "test_plan_B",
              href: "plan_URL",
              app_href: "plan_app_URL",
            },
            status: "failed",
            plan_execution: {
              is_retry: false,
              id: "plan_execution_id",
              href: "plan_execution_URL",
              status: "failed",
            },
          },
        ],
        journey_execution_metrics: {
          running: 0,
          total: 24,
          passed: 8,
          failed: 8,
          terminated: 0,
          skipped: 8,
        },
        event_status: {
          succeeded_by_plan: {
            test_plan_A: false,
            test_plan_B: false,
          },
          succeeded_first_attempt: false,
          succeeded: false,
        },
      },
    };
    const testResultFormatter = new MablCliFormatter();
    const testCycleName = new Date().toISOString();
    const dateOnly = testCycleName.split("T")[0];
    const formattedData = testResultFormatter.format(jsonData);

    expect(formattedData.length).toBe(4);
    expect(formattedData[0]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
    expect(formattedData[1]).toMatchObject({
      auto_test_suite_external_key: "test_plan_A",
      auto_test_suite_name: "テストプランA",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
    expect(formattedData[2]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "chrome_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
    expect(formattedData[3]).toMatchObject({
      auto_test_suite_external_key: "test_plan_B",
      auto_test_suite_name: "テストプランB",
      auto_test_cycle_name: expect.stringContaining(dateOnly),
      auto_execution_device_external_key: "edge_initial_url_A",
      auto_test_results: [
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_1",
          auto_test_case_name: "テストケース1",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern1",
          result: "skip",
          execution_time_taken: 0,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern2",
          result: "pass",
          execution_time_taken: 58411,
          info_url: "info_URL",
        },
        {
          auto_test_case_external_key: "test_case_2",
          auto_test_case_name: "テストケース2",
          auto_execution_pattern_external_key: "dataPattern3",
          result: "fail",
          execution_time_taken: 102382,
          info_url: "info_URL",
          remark: "Assertion Failure",
        },
      ],
    });
  });
});
